#include <iostream>
#include <algorithm>
#include <utility>
#include <vector>

using namespace std;
using ll = long long;

pair<ll, ll> binarySearch(vector<pair<ll, ll>> &arr, ll in)
{
    int left = 0;
    int right = arr.size() - 1;
    while (left < right) {
        ll total = arr[left].first + arr[right].first;
        if (total == in) {
            return make_pair(left, right);
        }
        else if (in < total) {
            right--;
        }
        else {
            left++;
        }
    }
    return make_pair(-1,-1);
}

int main()
{
    int n;
    ll x;
    ll a;
    cin >> n >> x;
    vector<pair<ll, ll>> arr;
    for (int i = 0; i < n; ++i) {
        cin >> a;
        arr.emplace_back(make_pair(a, i+1));
    }
    sort(arr.begin(), arr.end());
    pair<ll, ll> fd = binarySearch(arr ,x);

    if (fd.first == -1) {
        cout << "IMPOSSIBLE";
    }
    else {
        if (arr[fd.first].second < arr[fd.second].second) {
            cout << arr[fd.first].second << " " << arr[fd.second].second << endl;
        }
        else {
            cout << arr[fd.second].second << " " << arr[fd.first].second << endl;
        }
    }
    return 0;
}
